name: Update ppmod.nut and create packages

on:
  push:
    branches:
      - main

jobs:
  update-ppmod-and-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed for rebase and tags

      - name: Download ppmod.nut into every vscripts folder
        run: |
          find packages -type d -path "*/sources/scripts/vscripts" | while read dir; do
            mkdir -p "$dir"
            echo "Downloading ppmod.nut to $dir"
            curl -Ls "https://raw.githubusercontent.com/p2r3/ppmod/main/ppmod.nut" -o "$dir/ppmod.nut"
          done

      - name: Verify downloaded ppmod.nut files
        run: |
          echo "Listing ppmod.nut files:"
          find packages -type f -name "ppmod.nut" -exec ls -l {} \;
          echo "Showing first 10 lines of each ppmod.nut:"
          find packages -type f -name "ppmod.nut" -exec head -10 {} \;

      - name: Commit and push changes if any
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git fetch origin main
          git rebase origin/main

          git add packages

          if git diff --cached --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update ppmod.nut in all packages"
            git push origin main
          fi

      - name: Create or update "latest" tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          git tag -f latest
          git push -f origin latest

      - name: Create distributable packages
        run: |
          for package_dir in packages/*; do
            sources_dir="$package_dir/sources"
            package_name=$(basename "$package_dir")

            if [ ! -d "$sources_dir" ]; then
              echo "No sources found for $package_name"
              continue
            fi

            vpk_dir="$sources_dir/pak01_dir"
            vpk_file="$sources_dir/pak01_dir.vpk"

            if [ -d "$vpk_dir" ]; then
              echo "Creating pak01_dir.vpk for $package_name"
              vpk -c "$vpk_dir" "$vpk_file" -cv 1
              rm -rf "$vpk_dir"
            fi

            echo "Creating package archive for $package_name"
            archive_path="$package_dir/$package_name.tar"
            tar -cf "$archive_path" -C "$sources_dir" .
            xz -9e "$archive_path"
          done

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: latest
          name: "Package archives"
          body: "This release contains the latest versions of all packages, archived and ready for use with Spplice."
          draft: false
          prerelease: false
          files: packages/*/*.tar.xz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
